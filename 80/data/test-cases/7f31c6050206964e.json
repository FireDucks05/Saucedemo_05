{"uid":"7f31c6050206964e","name":"Purpose to fail case","fullName":"tests.test_login.TestAuthorizationClass#test_for_fail","historyId":"f7e15992c97846920025db845aeb4630","time":{"start":1669250887907,"stop":1669250894327,"duration":6420},"status":"failed","statusMessage":"AssertionError: assert False\n +  where False = <bound method BasePage.page_is_open of <pages.login_page.LoginPage object at 0x7f9f16e2e830>>(url='https://www.saucedemo.com/inventory.html')\n +    where <bound method BasePage.page_is_open of <pages.login_page.LoginPage object at 0x7f9f16e2e830>> = <pages.login_page.LoginPage object at 0x7f9f16e2e830>.page_is_open\n +      where <pages.login_page.LoginPage object at 0x7f9f16e2e830> = <tests.test_login.TestAuthorizationClass object at 0x7f9f16ee0340>.login_page","statusTrace":"self = <tests.test_login.TestAuthorizationClass object at 0x7f9f16ee0340>\n\n    @allure.story('US_001.00 | Login Page')\n    @allure.title(\"Purpose to fail case\")\n    @pytest.mark.positive\n    def test_for_fail(self):\n        self.login_page.login_ui(\n            POSITIVE_LOGIN_CREDENTIALS[0][0], POSITIVE_LOGIN_CREDENTIALS[0][1]\n        )\n        self.login_page.burger_menu()\n        self.login_page.logout()\n>       assert self.login_page.page_is_open(url=\"https://www.saucedemo.com/inventory.html\")\nE       AssertionError: assert False\nE        +  where False = <bound method BasePage.page_is_open of <pages.login_page.LoginPage object at 0x7f9f16e2e830>>(url='https://www.saucedemo.com/inventory.html')\nE        +    where <bound method BasePage.page_is_open of <pages.login_page.LoginPage object at 0x7f9f16e2e830>> = <pages.login_page.LoginPage object at 0x7f9f16e2e830>.page_is_open\nE        +      where <pages.login_page.LoginPage object at 0x7f9f16e2e830> = <tests.test_login.TestAuthorizationClass object at 0x7f9f16ee0340>.login_page\n\ntests/test_login.py:67: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"tmpdir_factory","time":{"start":1669250878209,"stop":1669250878209,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"session_tmpdir","time":{"start":1669250878209,"stop":1669250878210,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"splinter_make_screenshot_on_failure","time":{"start":1669250878210,"stop":1669250878210,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"splinter_session_scoped_browser","time":{"start":1669250878210,"stop":1669250878210,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"splinter_screenshot_encoding","time":{"start":1669250878210,"stop":1669250878211,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"splinter_screenshot_dir","time":{"start":1669250878210,"stop":1669250878210,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"splinter_screenshot_getter_html","time":{"start":1669250878211,"stop":1669250878211,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"splinter_screenshot_getter_png","time":{"start":1669250878211,"stop":1669250878211,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"headless","time":{"start":1669250878211,"stop":1669250878211,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"_browser_screenshot_session","time":{"start":1669250886645,"stop":1669250886645,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"browser","time":{"start":1669250886646,"stop":1669250887656,"duration":1010},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setup","time":{"start":1669250887656,"stop":1669250887906,"duration":250},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"url","time":{"start":1669250887656,"stop":1669250887656,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert False\n +  where False = <bound method BasePage.page_is_open of <pages.login_page.LoginPage object at 0x7f9f16e2e830>>(url='https://www.saucedemo.com/inventory.html')\n +    where <bound method BasePage.page_is_open of <pages.login_page.LoginPage object at 0x7f9f16e2e830>> = <pages.login_page.LoginPage object at 0x7f9f16e2e830>.page_is_open\n +      where <pages.login_page.LoginPage object at 0x7f9f16e2e830> = <tests.test_login.TestAuthorizationClass object at 0x7f9f16ee0340>.login_page","statusTrace":"self = <tests.test_login.TestAuthorizationClass object at 0x7f9f16ee0340>\n\n    @allure.story('US_001.00 | Login Page')\n    @allure.title(\"Purpose to fail case\")\n    @pytest.mark.positive\n    def test_for_fail(self):\n        self.login_page.login_ui(\n            POSITIVE_LOGIN_CREDENTIALS[0][0], POSITIVE_LOGIN_CREDENTIALS[0][1]\n        )\n        self.login_page.burger_menu()\n        self.login_page.logout()\n>       assert self.login_page.page_is_open(url=\"https://www.saucedemo.com/inventory.html\")\nE       AssertionError: assert False\nE        +  where False = <bound method BasePage.page_is_open of <pages.login_page.LoginPage object at 0x7f9f16e2e830>>(url='https://www.saucedemo.com/inventory.html')\nE        +    where <bound method BasePage.page_is_open of <pages.login_page.LoginPage object at 0x7f9f16e2e830>> = <pages.login_page.LoginPage object at 0x7f9f16e2e830>.page_is_open\nE        +      where <pages.login_page.LoginPage object at 0x7f9f16e2e830> = <tests.test_login.TestAuthorizationClass object at 0x7f9f16ee0340>.login_page\n\ntests/test_login.py:67: AssertionError","steps":[],"attachments":[{"uid":"7e2541c99dac18dc","name":"test_for_fail","source":"7e2541c99dac18dc.png","type":"image/png","size":36964},{"uid":"8c70a055c73381cb","name":"log","source":"8c70a055c73381cb.txt","type":"text/plain","size":67}],"parameters":[],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"browser::0","time":{"start":1669250894472,"stop":1669250894539,"duration":67},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"_browser_screenshot_session::0","time":{"start":1669250894540,"stop":1669250894540,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"story","value":"US_001.00 | Login Page"},{"name":"tag","value":"positive"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_login"},{"name":"subSuite","value":"TestAuthorizationClass"},{"name":"host","value":"fv-az574-596"},{"name":"thread","value":"2631-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["positive"]},"source":"7f31c6050206964e.json","parameterValues":[]}