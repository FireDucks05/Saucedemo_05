{"uid":"ad865cbd33b29536","name":"test_get_chunk_of_words","fullName":"api.test_words.TestWordsAPI#test_get_chunk_of_words","historyId":"332667e7552c660b486bb0c55cc62fb2","time":{"start":1670255389526,"stop":1670255390016,"duration":490},"status":"failed","statusMessage":"AssertionError: wrong status code\nassert 503 == <HTTPStatus.OK: 200>\n +  where 503 = <Response [503]>.status_code\n +  and   <HTTPStatus.OK: 200> = HTTPStatus.OK","statusTrace":"self = <api.test_words.TestWordsAPI object at 0x7f3c4084d150>\n\n    def test_get_chunk_of_words(self):\n        global counter\n        counter = 0\n        schema1 = {\n            \"properties\": {\n                \"id\": {\n                    \"description\": \"The unique identifier for a user\",\n                    \"type\": \"string\"\n                },\n            },\n            \"required\": [\n                \"id\",\n            ]\n        }\n        response = requests.get(f'{self.url}')\n>       assert response.status_code == HTTPStatus.OK, 'wrong status code'\nE       AssertionError: wrong status code\nE       assert 503 == <HTTPStatus.OK: 200>\nE        +  where 503 = <Response [503]>.status_code\nE        +  and   <HTTPStatus.OK: 200> = HTTPStatus.OK\n\napi/test_words.py:26: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1670255387741,"stop":1670255387814,"duration":73},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"tmpdir_factory","time":{"start":1670255387814,"stop":1670255387814,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"session_tmpdir","time":{"start":1670255387814,"stop":1670255387815,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"splinter_screenshot_encoding","time":{"start":1670255387815,"stop":1670255387815,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"splinter_screenshot_dir","time":{"start":1670255387815,"stop":1670255387815,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"splinter_screenshot_getter_png","time":{"start":1670255387815,"stop":1670255387815,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"splinter_make_screenshot_on_failure","time":{"start":1670255387815,"stop":1670255387815,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"splinter_screenshot_getter_html","time":{"start":1670255387815,"stop":1670255387815,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"splinter_session_scoped_browser","time":{"start":1670255387815,"stop":1670255387815,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"_browser_screenshot_session","time":{"start":1670255389525,"stop":1670255389525,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"_browser_screenshot_session::0","time":{"start":1670255390020,"stop":1670255390020,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"api"},{"name":"suite","value":"test_words"},{"name":"subSuite","value":"TestWordsAPI"},{"name":"host","value":"fv-az298-402"},{"name":"thread","value":"2688-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"api.test_words"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":1,"unknown":0,"total":3},"items":[{"uid":"3b9eef6526c2f9e4","reportUrl":"https://FireDucks05.github.io/Saucedemo_05/97//#testresult/3b9eef6526c2f9e4","status":"failed","statusDetails":"AssertionError: wrong status code\nassert 503 == <HTTPStatus.OK: 200>\n +  where 503 = <Response [503]>.status_code\n +  and   <HTTPStatus.OK: 200> = HTTPStatus.OK","time":{"start":1670248546304,"stop":1670248546795,"duration":491}},{"uid":"cbdc6a5d706902f4","reportUrl":"https://FireDucks05.github.io/Saucedemo_05/96//#testresult/cbdc6a5d706902f4","status":"passed","time":{"start":1669765726830,"stop":1669765727362,"duration":532}}]},"tags":[]},"source":"ad865cbd33b29536.json","parameterValues":[]}