{"uid":"11b1b036b8b5f72c","name":"Standart_user login","fullName":"tests.test_login.TestAuthorizationClass#test_login_WO_login","historyId":"64db70cdf957239d01fd7f56f6da0521","time":{"start":1669088878751,"stop":1669088878751,"duration":0},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55a79f83f463 <unknown>\n#1 0x55a79f6038d8 <unknown>\n#2 0x55a79f62bb6a <unknown>\n#3 0x55a79f626c05 <unknown>\n#4 0x55a79f66a802 <unknown>\n#5 0x55a79f66a2af <unknown>\n#6 0x55a79f662443 <unknown>\n#7 0x55a79f6333c5 <unknown>\n#8 0x55a79f634531 <unknown>\n#9 0x55a79f891dce <unknown>\n#10 0x55a79f895192 <unknown>\n#11 0x55a79f87693e <unknown>\n#12 0x55a79f896103 <unknown>\n#13 0x55a79f869d85 <unknown>\n#14 0x55a79f8b70a8 <unknown>\n#15 0x55a79f8b7239 <unknown>\n#16 0x55a79f8d2492 <unknown>\n#17 0x7f7304cffb43 <unknown>","statusTrace":"request = <SubRequest 'browser' for <Function test_login_WO_login>>\nheadless = False\n\n    @pytest.fixture(autouse=True)\n    def browser(request, headless):\n        browser = request.config.getoption(\"--launch\")\n        if browser == \"firefox\":\n            options = webdriver.FirefoxOptions()\n            options.add_argument(\"--window-size=1600,1080\")\n            options.headless = headless\n    \n            browser = webdriver.Firefox(FirefoxService(GeckoDriverManager().install()), options=options\n            )\n            yield browser\n            browser.quit()\n        else:\n    \n            options = webdriver.ChromeOptions()\n            options.add_argument(\"--window-size=1600,1080\")\n            options.headless = headless\n            logging.info('start logs')\n>           browser = webdriver.Chrome(ChromeDriverManager().install(), options=options\n            )\n\nconftest.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.venv/lib/python3.10/site-packages/selenium/webdriver/chrome/webdriver.py:81: in __init__\n    super().__init__(\n.venv/lib/python3.10/site-packages/selenium/webdriver/chromium/webdriver.py:106: in __init__\n    super().__init__(\n.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:288: in __init__\n    self.start_session(capabilities, browser_profile)\n.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:381: in start_session\n    response = self.execute(Command.NEW_SESSION, parameters)\n.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:444: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f068f583a00>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: Chrome failed to start: exited a...\\\\n#15 0x55a79f8b7239 \\\\u003Cunknown>\\\\n#16 0x55a79f8d2492 \\\\u003Cunknown>\\\\n#17 0x7f7304cffb43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = \"{}.{}\".format(frame[\"className\"], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\nE         (unknown error: DevToolsActivePort file doesn't exist)\nE         (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nE       Stacktrace:\nE       #0 0x55a79f83f463 <unknown>\nE       #1 0x55a79f6038d8 <unknown>\nE       #2 0x55a79f62bb6a <unknown>\nE       #3 0x55a79f626c05 <unknown>\nE       #4 0x55a79f66a802 <unknown>\nE       #5 0x55a79f66a2af <unknown>\nE       #6 0x55a79f662443 <unknown>\nE       #7 0x55a79f6333c5 <unknown>\nE       #8 0x55a79f634531 <unknown>\nE       #9 0x55a79f891dce <unknown>\nE       #10 0x55a79f895192 <unknown>\nE       #11 0x55a79f87693e <unknown>\nE       #12 0x55a79f896103 <unknown>\nE       #13 0x55a79f869d85 <unknown>\nE       #14 0x55a79f8b70a8 <unknown>\nE       #15 0x55a79f8b7239 <unknown>\nE       #16 0x55a79f8d2492 <unknown>\nE       #17 0x7f7304cffb43 <unknown>\n\n.venv/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:249: WebDriverException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"headless","time":{"start":1669088870878,"stop":1669088870878,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentsCount":0},{"name":"browser","time":{"start":1669088878751,"stop":1669088879530,"duration":779},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55a79f83f463 <unknown>\n#1 0x55a79f6038d8 <unknown>\n#2 0x55a79f62bb6a <unknown>\n#3 0x55a79f626c05 <unknown>\n#4 0x55a79f66a802 <unknown>\n#5 0x55a79f66a2af <unknown>\n#6 0x55a79f662443 <unknown>\n#7 0x55a79f6333c5 <unknown>\n#8 0x55a79f634531 <unknown>\n#9 0x55a79f891dce <unknown>\n#10 0x55a79f895192 <unknown>\n#11 0x55a79f87693e <unknown>\n#12 0x55a79f896103 <unknown>\n#13 0x55a79f869d85 <unknown>\n#14 0x55a79f8b70a8 <unknown>\n#15 0x55a79f8b7239 <unknown>\n#16 0x55a79f8d2492 <unknown>\n#17 0x7f7304cffb43 <unknown>\n\n","statusTrace":"  File \"/home/runner/work/Saucedemo_05/Saucedemo_05/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/Saucedemo_05/Saucedemo_05/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/Saucedemo_05/Saucedemo_05/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 900, in call_fixture_func\n    fixture_result = next(generator)\n  File \"/home/runner/work/Saucedemo_05/Saucedemo_05/conftest.py\", line 29, in browser\n    browser = webdriver.Chrome(ChromeDriverManager().install(), options=options\n  File \"/home/runner/work/Saucedemo_05/Saucedemo_05/.venv/lib/python3.10/site-packages/selenium/webdriver/chrome/webdriver.py\", line 81, in __init__\n    super().__init__(\n  File \"/home/runner/work/Saucedemo_05/Saucedemo_05/.venv/lib/python3.10/site-packages/selenium/webdriver/chromium/webdriver.py\", line 106, in __init__\n    super().__init__(\n  File \"/home/runner/work/Saucedemo_05/Saucedemo_05/.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 288, in __init__\n    self.start_session(capabilities, browser_profile)\n  File \"/home/runner/work/Saucedemo_05/Saucedemo_05/.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 381, in start_session\n    response = self.execute(Command.NEW_SESSION, parameters)\n  File \"/home/runner/work/Saucedemo_05/Saucedemo_05/.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 444, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/work/Saucedemo_05/Saucedemo_05/.venv/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py\", line 249, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"hasContent":true,"stepsCount":0,"attachmentsCount":0}],"afterStages":[],"labels":[{"name":"story","value":"US_001.00"},{"name":"tag","value":"negative"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_login"},{"name":"subSuite","value":"TestAuthorizationClass"},{"name":"host","value":"fv-az306-254"},{"name":"thread","value":"2619-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":0,"unknown":0,"total":4},"items":[{"uid":"aee5ee417bcd5f2e","reportUrl":"https://FireDucks05.github.io/Saucedemo_05/53//#testresult/aee5ee417bcd5f2e","status":"broken","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x56375676f463 <unknown>\n#1 0x5637565338d8 <unknown>\n#2 0x56375655bb6a <unknown>\n#3 0x563756556c05 <unknown>\n#4 0x56375659a802 <unknown>\n#5 0x56375659a2af <unknown>\n#6 0x563756592443 <unknown>\n#7 0x5637565633c5 <unknown>\n#8 0x563756564531 <unknown>\n#9 0x5637567c1dce <unknown>\n#10 0x5637567c5192 <unknown>\n#11 0x5637567a693e <unknown>\n#12 0x5637567c6103 <unknown>\n#13 0x563756799d85 <unknown>\n#14 0x5637567e70a8 <unknown>\n#15 0x5637567e7239 <unknown>\n#16 0x563756802492 <unknown>\n#17 0x7efc777c5b43 <unknown>","time":{"start":1669088275730,"stop":1669088275730,"duration":0}},{"uid":"2316e63d49b244e5","reportUrl":"https://FireDucks05.github.io/Saucedemo_05/52//#testresult/2316e63d49b244e5","status":"broken","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x56429263f463 <unknown>\n#1 0x5642924038d8 <unknown>\n#2 0x56429242bb6a <unknown>\n#3 0x564292426c05 <unknown>\n#4 0x56429246a802 <unknown>\n#5 0x56429246a2af <unknown>\n#6 0x564292462443 <unknown>\n#7 0x5642924333c5 <unknown>\n#8 0x564292434531 <unknown>\n#9 0x564292691dce <unknown>\n#10 0x564292695192 <unknown>\n#11 0x56429267693e <unknown>\n#12 0x564292696103 <unknown>\n#13 0x564292669d85 <unknown>\n#14 0x5642926b70a8 <unknown>\n#15 0x5642926b7239 <unknown>\n#16 0x5642926d2492 <unknown>\n#17 0x7f24be7a2b43 <unknown>","time":{"start":1669086990171,"stop":1669086990171,"duration":0}},{"uid":"eea5b75598a0f009","reportUrl":"https://FireDucks05.github.io/Saucedemo_05/51//#testresult/eea5b75598a0f009","status":"broken","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x562431c00463 <unknown>\n#1 0x5624319c48d8 <unknown>\n#2 0x5624319ecb6a <unknown>\n#3 0x5624319e7c05 <unknown>\n#4 0x562431a2b802 <unknown>\n#5 0x562431a2b2af <unknown>\n#6 0x562431a23443 <unknown>\n#7 0x5624319f43c5 <unknown>\n#8 0x5624319f5531 <unknown>\n#9 0x562431c52dce <unknown>\n#10 0x562431c56192 <unknown>\n#11 0x562431c3793e <unknown>\n#12 0x562431c57103 <unknown>\n#13 0x562431c2ad85 <unknown>\n#14 0x562431c780a8 <unknown>\n#15 0x562431c78239 <unknown>\n#16 0x562431c93492 <unknown>\n#17 0x7f02c2b68b43 <unknown>","time":{"start":1669086351201,"stop":1669086351201,"duration":0}}]},"tags":["negative"]},"source":"11b1b036b8b5f72c.json","parameterValues":[]}