{"uid":"893e23a872ca442a","name":"test_logout","fullName":"tests.test_login_logout.TestLoginPage#test_logout","historyId":"5f60fdd018a8e58b5a084fcc20baf83c","time":{"start":1674864663553,"stop":1674864668620,"duration":5067},"status":"skipped","statusMessage":"XFAIL\n\nselenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"user-name\"]\"}\n  (Session info: headless chrome=109.0.5414.74)\nStacktrace:\n#0 0x55627cbb9303 <unknown>\n#1 0x55627c98dd37 <unknown>\n#2 0x55627c9ca5b2 <unknown>\n#3 0x55627c9ca6c1 <unknown>\n#4 0x55627ca04b34 <unknown>\n#5 0x55627c9ea9ad <unknown>\n#6 0x55627ca0288c <unknown>\n#7 0x55627c9ea753 <unknown>\n#8 0x55627c9bda14 <unknown>\n#9 0x55627c9beb7e <unknown>\n#10 0x55627cc0832e <unknown>\n#11 0x55627cc0bc0e <unknown>\n#12 0x55627cbee610 <unknown>\n#13 0x55627cc0cc23 <unknown>\n#14 0x55627cbe0545 <unknown>\n#15 0x55627cc2d6a8 <unknown>\n#16 0x55627cc2d836 <unknown>\n#17 0x55627cc48d13 <unknown>\n#18 0x7f14e4dc4b43 <unknown>","statusTrace":"self = <tests.test_login_logout.TestLoginPage object at 0x7f41431014e0>\n\n    @pytest.mark.xfail\n    def test_logout(self):\n        log = self.getLogger()\n        loginpage = LoginPage(self.browser)\n        log.info(\"logging out\")\n>       loginpage.getlogin()\n\ntests/test_login_logout.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/login_logout_page.py:16: in getlogin\n    self.browser.find_element(*LoginPage.username_field).send_keys('standard_user')\n.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:861: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:444: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f4142f63550>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x55627cc2d836 \\\\u003Cunknown>\\\\n#17 0x55627cc48d13 \\\\u003Cunknown>\\\\n#18 0x7f14e4dc4b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = \"{}.{}\".format(frame[\"className\"], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"user-name\"]\"}\nE         (Session info: headless chrome=109.0.5414.74)\nE       Stacktrace:\nE       #0 0x55627cbb9303 <unknown>\nE       #1 0x55627c98dd37 <unknown>\nE       #2 0x55627c9ca5b2 <unknown>\nE       #3 0x55627c9ca6c1 <unknown>\nE       #4 0x55627ca04b34 <unknown>\nE       #5 0x55627c9ea9ad <unknown>\nE       #6 0x55627ca0288c <unknown>\nE       #7 0x55627c9ea753 <unknown>\nE       #8 0x55627c9bda14 <unknown>\nE       #9 0x55627c9beb7e <unknown>\nE       #10 0x55627cc0832e <unknown>\nE       #11 0x55627cc0bc0e <unknown>\nE       #12 0x55627cbee610 <unknown>\nE       #13 0x55627cc0cc23 <unknown>\nE       #14 0x55627cbe0545 <unknown>\nE       #15 0x55627cc2d6a8 <unknown>\nE       #16 0x55627cc2d836 <unknown>\nE       #17 0x55627cc48d13 <unknown>\nE       #18 0x7f14e4dc4b43 <unknown>\n\n.venv/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:249: NoSuchElementException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1674864647586,"stop":1674864647666,"duration":80},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"tmpdir_factory","time":{"start":1674864647666,"stop":1674864647666,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"session_tmpdir","time":{"start":1674864647666,"stop":1674864647667,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"splinter_screenshot_dir","time":{"start":1674864647667,"stop":1674864647667,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"splinter_make_screenshot_on_failure","time":{"start":1674864647667,"stop":1674864647667,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"splinter_screenshot_getter_html","time":{"start":1674864647667,"stop":1674864647667,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"splinter_screenshot_encoding","time":{"start":1674864647667,"stop":1674864647667,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"splinter_session_scoped_browser","time":{"start":1674864647667,"stop":1674864647667,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"splinter_screenshot_getter_png","time":{"start":1674864647667,"stop":1674864647667,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setup","time":{"start":1674864662292,"stop":1674864663244,"duration":952},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"_browser_screenshot_session","time":{"start":1674864663244,"stop":1674864663244,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"login","time":{"start":1674864663245,"stop":1674864663552,"duration":307},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"skipped","statusMessage":"XFAIL\n\nselenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"user-name\"]\"}\n  (Session info: headless chrome=109.0.5414.74)\nStacktrace:\n#0 0x55627cbb9303 <unknown>\n#1 0x55627c98dd37 <unknown>\n#2 0x55627c9ca5b2 <unknown>\n#3 0x55627c9ca6c1 <unknown>\n#4 0x55627ca04b34 <unknown>\n#5 0x55627c9ea9ad <unknown>\n#6 0x55627ca0288c <unknown>\n#7 0x55627c9ea753 <unknown>\n#8 0x55627c9bda14 <unknown>\n#9 0x55627c9beb7e <unknown>\n#10 0x55627cc0832e <unknown>\n#11 0x55627cc0bc0e <unknown>\n#12 0x55627cbee610 <unknown>\n#13 0x55627cc0cc23 <unknown>\n#14 0x55627cbe0545 <unknown>\n#15 0x55627cc2d6a8 <unknown>\n#16 0x55627cc2d836 <unknown>\n#17 0x55627cc48d13 <unknown>\n#18 0x7f14e4dc4b43 <unknown>","statusTrace":"self = <tests.test_login_logout.TestLoginPage object at 0x7f41431014e0>\n\n    @pytest.mark.xfail\n    def test_logout(self):\n        log = self.getLogger()\n        loginpage = LoginPage(self.browser)\n        log.info(\"logging out\")\n>       loginpage.getlogin()\n\ntests/test_login_logout.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/login_logout_page.py:16: in getlogin\n    self.browser.find_element(*LoginPage.username_field).send_keys('standard_user')\n.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:861: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:444: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f4142f63550>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x55627cc2d836 \\\\u003Cunknown>\\\\n#17 0x55627cc48d13 \\\\u003Cunknown>\\\\n#18 0x7f14e4dc4b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = \"{}.{}\".format(frame[\"className\"], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"user-name\"]\"}\nE         (Session info: headless chrome=109.0.5414.74)\nE       Stacktrace:\nE       #0 0x55627cbb9303 <unknown>\nE       #1 0x55627c98dd37 <unknown>\nE       #2 0x55627c9ca5b2 <unknown>\nE       #3 0x55627c9ca6c1 <unknown>\nE       #4 0x55627ca04b34 <unknown>\nE       #5 0x55627c9ea9ad <unknown>\nE       #6 0x55627ca0288c <unknown>\nE       #7 0x55627c9ea753 <unknown>\nE       #8 0x55627c9bda14 <unknown>\nE       #9 0x55627c9beb7e <unknown>\nE       #10 0x55627cc0832e <unknown>\nE       #11 0x55627cc0bc0e <unknown>\nE       #12 0x55627cbee610 <unknown>\nE       #13 0x55627cc0cc23 <unknown>\nE       #14 0x55627cbe0545 <unknown>\nE       #15 0x55627cc2d6a8 <unknown>\nE       #16 0x55627cc2d836 <unknown>\nE       #17 0x55627cc48d13 <unknown>\nE       #18 0x7f14e4dc4b43 <unknown>\n\n.venv/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:249: NoSuchElementException","steps":[],"attachments":[{"uid":"4ba4a3d093c248ca","name":"log","source":"4ba4a3d093c248ca.txt","type":"text/plain","size":56}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"login::0","time":{"start":1674864668657,"stop":1674864670751,"duration":2094},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"_browser_screenshot_session::0","time":{"start":1674864670752,"stop":1674864670752,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setup::0","time":{"start":1674864670752,"stop":1674864670809,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"tag","value":"@pytest.mark.xfail"},{"name":"tag","value":"@pytest.mark.usefixtures('setup')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_login_logout"},{"name":"subSuite","value":"TestLoginPage"},{"name":"host","value":"fv-az447-593"},{"name":"thread","value":"2763-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_login_logout"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":3,"passed":0,"unknown":0,"total":3},"items":[{"uid":"528552577c77d918","reportUrl":"https://FireDucks05.github.io/Saucedemo_05/112//#testresult/528552577c77d918","status":"skipped","statusDetails":"XFAIL\n\nselenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"user-name\"]\"}\n  (Session info: headless chrome=108.0.5359.124)\nStacktrace:\n#0 0x55bdaf3032a3 <unknown>\n#1 0x55bdaf0c1f77 <unknown>\n#2 0x55bdaf0fe80c <unknown>\n#3 0x55bdaf0fea71 <unknown>\n#4 0x55bdaf138734 <unknown>\n#5 0x55bdaf11eb5d <unknown>\n#6 0x55bdaf13647c <unknown>\n#7 0x55bdaf11e903 <unknown>\n#8 0x55bdaf0f1ece <unknown>\n#9 0x55bdaf0f2fde <unknown>\n#10 0x55bdaf35363e <unknown>\n#11 0x55bdaf356b79 <unknown>\n#12 0x55bdaf33989e <unknown>\n#13 0x55bdaf357a83 <unknown>\n#14 0x55bdaf32c505 <unknown>\n#15 0x55bdaf378ca8 <unknown>\n#16 0x55bdaf378e36 <unknown>\n#17 0x55bdaf394333 <unknown>\n#18 0x7f5e37809b43 <unknown>","time":{"start":1673819957421,"stop":1673819962473,"duration":5052}},{"uid":"d236a13e00bc7ac7","reportUrl":"https://FireDucks05.github.io/Saucedemo_05/111//#testresult/d236a13e00bc7ac7","status":"skipped","statusDetails":"XFAIL\n\nselenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"user-name\"]\"}\n  (Session info: headless chrome=108.0.5359.98)\nStacktrace:\n#0 0x560b802d12a3 <unknown>\n#1 0x560b8008ff77 <unknown>\n#2 0x560b800cc80c <unknown>\n#3 0x560b800cca71 <unknown>\n#4 0x560b80106734 <unknown>\n#5 0x560b800ecb5d <unknown>\n#6 0x560b8010447c <unknown>\n#7 0x560b800ec903 <unknown>\n#8 0x560b800bfece <unknown>\n#9 0x560b800c0fde <unknown>\n#10 0x560b8032163e <unknown>\n#11 0x560b80324b79 <unknown>\n#12 0x560b8030789e <unknown>\n#13 0x560b80325a83 <unknown>\n#14 0x560b802fa505 <unknown>\n#15 0x560b80346ca8 <unknown>\n#16 0x560b80346e36 <unknown>\n#17 0x560b80362333 <unknown>\n#18 0x7f0b4debbb43 <unknown>","time":{"start":1672966444966,"stop":1672966450032,"duration":5066}}]},"tags":["@pytest.mark.xfail","@pytest.mark.usefixtures('setup')"]},"source":"893e23a872ca442a.json","parameterValues":[]}